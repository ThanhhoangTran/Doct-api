# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input BaseQueryFilterDto {
  filter: FilterDto
  pageNumber: Float = 1
  pageSize: Float = 10
  q: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum EVENT_TYPE {
  APPOINTMENT
  MEETING
  OPERATION
}

input FilterDto {
  data: String!
  field: String!
  operator: QUERY_OPERATORS!
}

type MetaPaginationInterface {
  currentPage: Int!
  itemCount: Int!
  itemsPerPage: Int!
  totalItems: Int!
  totalPages: Int!
}

type Mutation {
  signUp(input: SignUpDto!): User!
  upsertScheduleTimingEvent(input: UpsertScheduleTimingEventInput!): TimeOpeningResponse!
}

enum QUERY_OPERATORS {
  EQUAL
  GREATER_THAN
  GREATER_THAN_EQUAL
  IN
  LESS_THAN
  LESS_THAN_EQUAL
  NOT_EQUAL
  NOT_IN
}

type Query {
  getScheduleTimingEvents(queryParams: BaseQueryFilterDto!): TimeOpeningsResponse!
  signIn(input: SignInDto!): SignInResponse!
}

enum ROLE_NAME {
  DOCTOR
  PATIENT
  SUPER_ADMIN
}

type Role {
  createdAt: DateTime
  description: String!
  id: ID!
  name: String!
  updatedAt: DateTime
}

input SignInDto {
  email: String!
  password: String!
}

type SignInResponse {
  email: String!
  firstName: String!
  fullName: String!
  id: ID!
  lastName: String!
  refreshToken: String!
  role: Role!
  token: String!
}

input SignUpDto {
  address: String!
  confirmPassword: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
  roleType: ROLE_NAME!
}

type TimeOpeningResponse {
  endOpening: DateTime!
  event: EVENT_TYPE!
  id: ID!
  startOpening: DateTime!
  userId: ID!
}

type TimeOpeningsResponse {
  items: [TimeOpeningResponse!]!
  meta: MetaPaginationInterface!
}

input UpsertScheduleTimingEventInput {
  endOpening: DateTime!
  eventType: EVENT_TYPE! = APPOINTMENT
  id: ID
  startOpening: DateTime!
}

type User {
  address: String!
  createdAt: DateTime
  email: String!
  firstName: String!
  fullName: String!
  id: ID!
  lastName: String!
  phone: String!
  role: Role!
  roleId: ID!
  updatedAt: DateTime
}