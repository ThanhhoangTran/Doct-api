# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AvailableTimeResponse {
  endTime: DateTime!
  startTime: DateTime!
}

input BaseQueryFilterDto {
  filter: FilterDto
  pageNumber: Float = 1
  pageSize: Float = 10
  q: String
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

input FilterDto {
  data: String!
  field: String!
  operator: String! = "equal"
}

type GetMeResponse {
  address: String!
  email: String!
  firstName: String!
  fullName: String!
  id: ID!
  lastName: String!
  phone: String!
  role: RoleResponse!
}

input GetTimeOpeningRangesAvailableInput {
  endDate: DateTime = "2024-10-12T19:26:23.049Z"
  filterByOpeningType: String
  startDate: DateTime!
}

type MetaPaginationInterface {
  currentPage: Int!
  itemCount: Int!
  itemsPerPage: Int!
  totalItems: Int!
  totalPages: Int!
}

type Mutation {
  signUp(input: SignUpDto!): UserResponse!
  upsertScheduleTimingEvent(input: UpsertScheduleTimingEventInput!): TimeOpeningResponse!
}

type Query {
  getMe: GetMeResponse!
  getScheduleTimingEvents(queryParams: BaseQueryFilterDto!): TimeOpeningsResponse!
  getTimeOpeningRangesAvailable(input: GetTimeOpeningRangesAvailableInput!): [TimeOpeningRangeAvailableResponse!]!
  signIn(input: SignInDto!): SignInResponse!
}

type Role {
  createdAt: DateTime
  description: String!
  id: ID!
  name: String!
  updatedAt: DateTime
}

type RoleResponse {
  description: String!
  id: ID!
  name: String!
}

input SignInDto {
  email: String!
  password: String!
}

type SignInResponse {
  email: String!
  firstName: String!
  fullName: String!
  id: ID!
  lastName: String!
  refreshToken: String!
  role: RoleResponse!
  token: String!
}

input SignUpDto {
  address: String!
  confirmPassword: String!
  email: String!
  firstName: String!
  lastName: String!
  password: String!
  phone: String!
  roleType: String!
}

type TimeOpeningRangeAvailableResponse {
  appointments: [AvailableTimeResponse!]
  date: String!
  meetings: [AvailableTimeResponse!]
  operations: [AvailableTimeResponse!]
}

type TimeOpeningResponse {
  endOpening: DateTime!
  event: String!
  id: ID!
  startOpening: DateTime!
  userId: ID!
}

type TimeOpeningsResponse {
  items: [TimeOpeningResponse!]!
  meta: MetaPaginationInterface!
}

input UpsertScheduleTimingEventInput {
  endOpening: DateTime!
  eventType: String! = "appointment"
  id: ID
  startOpening: DateTime!
}

type UserResponse {
  email: String!
  firstName: String!
  fullName: String!
  id: ID!
  lastName: String!
  role: RoleResponse!
}