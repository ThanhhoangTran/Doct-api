service: doct-api
frameworkVersion: '3'

custom:
  serverless-offline:
    useChildProcesses: true
  s3BucketName: ${self:custom.baseName}-s3-bucket
  sqs: ${self:custom.baseName}-message-queue
  sqs-dlq: ${self:custom.baseName}-message-dead-letter-queue
  webpack:
    webpackConfig: 'webpack-serverless.config.ts'
    packager: 'yarn'

package:
  individually: true

provider:
  name: aws
  runtime: nodejs18.20.4
  region: ${opt:region, 'ap-southeast-1'}
  stage: ${opt:stage, 'dev'}

  environment:
    NODE_ENV: ${opt:stage, 'dev'}
    APP_ENV: ${opt:stage, 'dev'}
    REGION: ${opt:region, 'ap-southeast-1'}
    DB_URL: ${ssm:/doct/db-url}
    MAIN_QUEUE_URL: { Ref: MessageQueue }

  apiGateway:
    shouldStartNameWithService: true

  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:*
      Resource:
        - { Fn::Join: ['', [{ Fn::GetAtt: [S3Bucket, Arn] }, '*']] }
    - Effect: Allow
      Action:
        - sqs:*
      Resource:
        - { Fn::GetAtt: [MessageQueue, Arn] }
        - { Fn::GetAtt: [DeadLetterQueue, Arn] }
    - Effect: Allow
      Action:
        - rds:*
      Resource: '*'

plugins:
  - serverless-prune-plugin
  - serverless-offline
  - serverless-webpack
  - serverless-pseudo-parameters
  - serverless-plugin-scripts

functions:
  - ${file(./resources/lambdas/clientServer.yml)}

resources:
  - ${file(./resources/s3.yml)}
  - ${file(./resources/sqs.yml)}
  - ${file(./resources/rds.yml)}
